#             aes(xmin=start, xmax=end, annotations=label, y_position=y, fill=NULL),
#             vjust = -.1,
#             manual = TRUE) + # cross bar significance
# geom_text(data=ann_text1, aes(label = lab, fill=NULL)) +
# geom_text(data=ann_text2, aes(label = lab, fill=NULL)) +
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results",
caption = "~ = p<.06\n* = p<.05\n** = p<.01\n*** = p < .001") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(10)[9:10], guide=FALSE) +
coord_cartesian(ylim = c(-.2,.8))
require(tidyverse)
require(reshape2)
example_design_matrix <- as.matrix(read.csv('sub-s003-design-matrix.csv'))
row.names(example_design_matrix) <- seq(1, nrow(example_design_matrix), 1)
colnames(example_design_matrix) <- c("Emo-MBs", "Neu-MBs", #mini-blocks
"All-Trials","SubEmoMem","SubNeuMem", #trials
"x", "y", "z", #translation
"pitch", "roll", "yaw", #rotation
"run1-HPF1", "run1-HPF2", "run1-HPF3", #run1
"run2-HPF1", "run2-HPF2", "run2-HPF3", #run2
"run3-HPF1", "run3-HPF2", "run3-HPF3", #run3
"run4-HPF1", "run4-HPF2", "run4-HPF3", #run4
"run5-HPF1", "run5-HPF2", "run5-HPF3", #run5
"run6-HPF1", "run6-HPF2", "run6-HPF3", #run6
"run1-constant", "run2-constant", #run-constants
"run3-constant", "run4-constant", #run-constants
"run5-constant", "run6-constant", #run-constants
"constant" #experiment-wide-constant
)
long.data <- melt(example_design_matrix, varnames = c("Scan", "Regressor"))
ggplot(long.data, aes(x = Regressor, y = Scan)) +
geom_raster(aes(fill=value)) +
scale_x_discrete(position = "top") +
scale_fill_continuous(guide = FALSE) +
scale_y_continuous(trans = "reverse", breaks = seq(0,990,165)) +
theme(axis.text.x=element_text(size=8, angle=90, vjust=0.3, hjust = 0),
axis.text.y=element_text(size=9),
plot.title=element_text(size=11),
panel.grid=element_blank(),
panel.background=element_blank(),
axis.ticks.x = element_line()) +
labs(title = "Example Design Matrix")
require(papayaWidget)
papayaWidget(img = c("ROIs/single_subj_T1.nii",
"ROIs/rAMY_L_mask.nii", "ROIs/rAMY_R_mask.nii", #AMY
"ROIs/rHIPP_BODY_L_mask.nii", "ROIs/rHIPP_BODY_R_mask.nii", #HIPP
"ROIs/rPRC_L_mask.nii", "ROIs/rPRC_R_mask.nii", #PRC
"ROIs/rPHC_ANT_L_mask.nii", "ROIs/rPHC_ANT_R_mask.nii" #PHC
))
require(tidyverse)
require(scales)
df <- read.csv('roi-results.csv')
df %>%
mutate(hemisphere = ifelse(grepl("[L]{1}", roi_name), "L", ifelse(grepl("[R]{1}", roi_name), "R", NA)),
hemisphere = ifelse(hemisphere == "L", "Left", ifelse(hemisphere == "R", "Right", NA)),
hemisphere = factor(hemisphere),
region     = roi_name,
region     = sub("^r", "", region),
region     = sub("_[LR]{1}_mask$", "", region),
region     = factor(region)
) -> df
df %>%
filter(region == "AMY") %>%
ggplot(aes(x = con_name, y = summary_value, fill = roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(8)[1:2], guide=FALSE)
df %>%
filter(region == "HIPP_BODY") %>%
ggplot(aes(x = con_name, y = summary_value, fill = roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(8)[3:4], guide=FALSE)
df %>%
filter(region == "PHC_ANT") %>%
ggplot(aes(x = con_name, y = summary_value, fill = roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(8)[5:6], guide=FALSE)
require(ggsignif)
annotation.df <- data.frame(hemisphere=c("Left", "Right"),
region=c("PRC","PRC"),
start=c("NegDM", "NegDM"),
end=c("NeuDM", "NeuDM"),
y=c(.75, .75),
label=c("~", "*"))
ann_text1 <- data.frame(con_name = "NegDM", summary_value = .25, lab = "**",
hemisphere = factor("Left", levels = c("Left", "Right")),
region = factor("PRC", levels = levels(df$region)))
ann_text2 <- data.frame(con_name = "NegDM", summary_value = .3, lab = "***",
hemisphere = factor("Right", levels = c("Left", "Right")),
region = factor("PRC", levels = levels(df$region)))
df %>%
filter(region == "PRC") %>%
ggplot(aes(x = con_name, y = summary_value, fill=roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
geom_signif(data=annotation.df,
aes(xmin=start, xmax=end, annotations=label, y_position=y, fill=NULL),
vjust = -.1,
manual = TRUE) + # cross bar significance
geom_text(data=ann_text1, aes(label = lab, fill=NULL)) +
geom_text(data=ann_text2, aes(label = lab, fill=NULL)) +
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results",
caption = "~ = p<.06\n* = p<.05\n** = p<.01\n*** = p < .001") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(8)[7:8], guide=FALSE) +
coord_cartesian(ylim = c(-.2,.8))
# The t-tests in the code chunk confirm the custom annotations in the figure above
# test 1: NegDM != NegDM (paired) for Left PRC
t.test(summary_value ~ con_name,
data=df,
subset = grepl("DM", df$con_name) & df$roi_name == "rPRC_L_mask",
paired=TRUE)
# test 2: NegDM != NegDM (paired) for Right PRC
t.test(summary_value ~ con_name,
data=df,
subset = grepl("DM", df$con_name) & df$roi_name == "rPRC_R_mask",
paired=TRUE)
# test 3: NegDM != 0 (one-sample) for Left PRC
t.test(x = df$summary_value[df$roi_name == "rPRC_L_mask" & df$con_name == "NegDM"], mu = 0)
# test 4: NegDM != 0 (one-sample) for Right PRC
t.test(x = df$summary_value[df$roi_name == "rPRC_R_mask" & df$con_name == "NegDM"], mu = 0)
df %>%
filter(!grepl("CAUDATE", roi_name)) %>%
ggplot(aes(x = con_name, y = summary_value, fill = roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
facet_grid(hemisphere~region,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Mean Beta Value",
x = "Parameter",
title = "MTL Summary") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_discrete(guide=FALSE)
read.csv('roi-results-caudate-tails.csv') %>%
mutate(hemisphere = ifelse(grepl("[L]{1}", roi_name), "L", ifelse(grepl("[R]{1}", roi_name), "R", NA)),
hemisphere = ifelse(hemisphere == "L", "Left", ifelse(hemisphere == "R", "Right", NA)),
hemisphere = factor(hemisphere),
region     = roi_name,
region     = sub("^r", "", region),
region     = sub("_[LR]{1}_mask$", "", region),
region     = factor(region)
) -> df.caudate.only
annotation.df <- data.frame(hemisphere=c("Left", "Right"),
region=c("PRC","PRC"),
start=c("NegDM", "NegDM"),
end=c("NeuDM", "NeuDM"),
y=c(.75, .75),
label=c("~", "*"))
ann_text1 <- data.frame(con_name = "NegDM", summary_value = .25, lab = "**",
hemisphere = factor("Left", levels = c("Left", "Right")),
region = factor("PRC", levels = levels(df$region)))
ann_text2 <- data.frame(con_name = "NegDM", summary_value = .3, lab = "***",
hemisphere = factor("Right", levels = c("Left", "Right")),
region = factor("PRC", levels = levels(df$region)))
df.caudate.only %>%
ggplot(aes(x = con_name, y = summary_value, fill=roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
# geom_signif(data=annotation.df,
#             aes(xmin=start, xmax=end, annotations=label, y_position=y, fill=NULL),
#             vjust = -.1,
#             manual = TRUE) + # cross bar significance
# geom_text(data=ann_text1, aes(label = lab, fill=NULL)) +
# geom_text(data=ann_text2, aes(label = lab, fill=NULL)) +
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results",
caption = "~ = p<.06\n* = p<.05\n** = p<.01\n*** = p < .001") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(10)[9:10], guide=FALSE) +
coord_cartesian(ylim = c(-.2,.8))
read.csv('roi-results-caudate-tails.csv') %>%
mutate(hemisphere = ifelse(grepl("[L]{1}", roi_name), "L", ifelse(grepl("[R]{1}", roi_name), "R", NA)),
hemisphere = ifelse(hemisphere == "L", "Left", ifelse(hemisphere == "R", "Right", NA)),
hemisphere = factor(hemisphere),
region     = roi_name,
region     = sub("^r", "", region),
region     = sub("_[LR]{1}_mask$", "", region),
region     = factor(region)
) -> df.caudate.only
annotation.df <- data.frame(hemisphere=c("Left", "Right"),
region=c("PRC","PRC"),
start=c("NegDM", "NegDM"),
end=c("NeuDM", "NeuDM"),
y=c(.75, .75),
label=c("~", "*"))
ann_text1 <- data.frame(con_name = "NegDM", summary_value = .25, lab = "**",
hemisphere = factor("Left", levels = c("Left", "Right")),
region = factor("PRC", levels = levels(df$region)))
ann_text2 <- data.frame(con_name = "NegDM", summary_value = .3, lab = "***",
hemisphere = factor("Right", levels = c("Left", "Right")),
region = factor("PRC", levels = levels(df$region)))
df.caudate.only %>%
ggplot(aes(x = con_name, y = summary_value, fill=roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
# geom_signif(data=annotation.df,
#             aes(xmin=start, xmax=end, annotations=label, y_position=y, fill=NULL),
#             vjust = -.1,
#             manual = TRUE) + # cross bar significance
# geom_text(data=ann_text1, aes(label = lab, fill=NULL)) +
# geom_text(data=ann_text2, aes(label = lab, fill=NULL)) +
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results",
caption = "~ = p<.06\n* = p<.05\n** = p<.01\n*** = p < .001") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(10)[9:10], guide=FALSE)
t.test(data = df.caudate.only, summary_value~con_name, subset = grepl("Blocks", df.caudate.only$con_name) & hemisphere == "Left")
t.test(data = df.caudate.only, summary_value~con_name, subset = grepl("Blocks", df.caudate.only$con_name) & hemisphere == "Left", paired = TRUE)
t.test(data = df.caudate.only,
summary_value~con_name,
subset = grepl("Blocks", df.caudate.only$con_name) & hemisphere == "Left",
paired = TRUE)
t.test(data = df.caudate.only,
summary_value~con_name,
subset = grepl("Blocks", df.caudate.only$con_name) & hemisphere == "Right",
paired = TRUE)
read.csv('roi-results-caudate-tails.csv') %>%
mutate(hemisphere = ifelse(grepl("[L]{1}", roi_name), "L", ifelse(grepl("[R]{1}", roi_name), "R", NA)),
hemisphere = ifelse(hemisphere == "L", "Left", ifelse(hemisphere == "R", "Right", NA)),
hemisphere = factor(hemisphere),
region     = roi_name,
region     = sub("^r", "", region),
region     = sub("_[LR]{1}_mask$", "", region),
region     = factor(region)
) -> df.caudate.only
annotation.df <- data.frame(hemisphere=c("Left", "Right"),
region=c("CAUDATE","CAUDATE"),
start=c("Emotional-Blocks", "Emotional-Blocks"),
end=c("Neutral-Blocks", "Neutral-Blocks"),
y=c(.1, .1),
label=c("**", "***"))
df.caudate.only %>%
ggplot(aes(x = con_name, y = summary_value, fill=roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
geom_signif(data=annotation.df,
aes(xmin=start, xmax=end, annotations=label, y_position=y, fill=NULL),
vjust = -.1,
manual = TRUE) + # cross bar significance
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results",
caption = "~ = p<.06\n* = p<.05\n** = p<.01\n*** = p < .001") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(10)[9:10], guide=FALSE)
read.csv('roi-results-caudate-tails.csv') %>%
mutate(hemisphere = ifelse(grepl("[L]{1}", roi_name), "L", ifelse(grepl("[R]{1}", roi_name), "R", NA)),
hemisphere = ifelse(hemisphere == "L", "Left", ifelse(hemisphere == "R", "Right", NA)),
hemisphere = factor(hemisphere),
region     = roi_name,
region     = sub("^r", "", region),
region     = sub("_[LR]{1}_mask$", "", region),
region     = factor(region)
) -> df.caudate.only
annotation.df <- data.frame(hemisphere=c("Left", "Right"),
region=c("CAUDATE","CAUDATE"),
start=c("Emotional-Blocks", "Emotional-Blocks"),
end=c("Neutral-Blocks", "Neutral-Blocks"),
y=c(.1, .1),
label=c("**", "***"))
df.caudate.only %>%
ggplot(aes(x = con_name, y = summary_value, fill=roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
geom_signif(data=annotation.df,
aes(xmin=start, xmax=end, annotations=label, y_position=y, fill=NULL),
vjust = -.1,
manual = TRUE) + # cross bar significance
facet_grid(region~hemisphere,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Beta",
x = "Parameter",
title = "MTL ROI Results",
caption = "** = p<.01\n*** = p < .001") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_manual(values = hue_pal()(10)[9:10], guide=FALSE)
# Confirmatory t-tests for the figure above
# test 1: Emotional-Blocks != Neutral Blocks (paired) for Left Caudate
t.test(data = df.caudate.only,
summary_value~con_name,
subset = grepl("Blocks", df.caudate.only$con_name) & hemisphere == "Left",
paired = TRUE)
# test 1: Emotional-Blocks != Neutral Blocks (paired) for Right Caudate
t.test(data = df.caudate.only,
summary_value~con_name,
subset = grepl("Blocks", df.caudate.only$con_name) & hemisphere == "Right",
paired = TRUE)
install.packages("vegan")
source('~/.active-rstudio-document', echo=TRUE)
df %>%
filter(!grepl("CAUDATE", roi_name)) %>%
ggplot(aes(x = con_name, y = summary_value, fill = roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
facet_grid(hemisphere~region,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Mean Beta Value",
x = "Parameter",
title = "MTL Summary") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_discrete(guide=FALSE)
df %>%
filter(!grepl("CAUDATE", roi_name)) %>%
ggplot(aes(x = con_name, y = summary_value, fill = roi_name)) +
geom_bar(stat = "summary",
fun.y = "mean") +
geom_errorbar(stat = "summary",
fun.data = "mean_se",
width = 0.2) +
facet_grid(hemisphere~region,
scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Mean Beta Value",
x = "Parameter",
title = "MTL Summary") +
scale_x_discrete(limits = c("Emotional-Blocks", "Neutral-Blocks", "Trials", "NegDM", "NeuDM")) +
scale_fill_discrete(guide=FALSE)
hue_pal()(8)
?hue_pal()(8)
?hue_pal()
hue_pal()(8)
hue_pal()(8)
[97.3, 46.3, 42.7]
c(97.3, 46.3, 42.7)
c(97.3, 46.3, 42.7)/100
c(48.6, 68.2, 0)
c(48.6, 68.2, 0)/100
c(0, 74.5, 40.4)/100
c(0, 74.9, 76.9)/100
c(0, 66.3, 100)/100
c(78, 48.6, 100)/100
c(100, 38, 80)/100
install.packages("vembedr")
?embed_youtube
??embed_youtube
require(vembedr)
require(htmltools)
embed_youtube("8FUjjvmPsho", width=800, height = 450)
??htmtool
??htmtools
?htmtools
require(htmltools)
?htmltools
require(vembedr)
require(htmltools)
embed_youtube("8FUjjvmPsho", width=800, height = 450)
require(vembedr)
require(htmltools)
embed_youtube("8FUjjvmPsho", width=800, height = 450)
require(vembedr)
require(htmltools)
embed_youtube("8FUjjvmPsho", width=800, height = 450)
require(vembedr)
require(htmltools)
embed_youtube("8FUjjvmPsho", width=400, height = 400)
View(example_design_matrix)
require(papayaWidget)
papayaWidget(img = c("ROIs/single_subj_T1.nii",
"ROIs/rAMY_L_mask.nii", "ROIs/rAMY_R_mask.nii", #AMY
"ROIs/rHIPP_BODY_L_mask.nii", "ROIs/rHIPP_BODY_R_mask.nii", #HIPP
"ROIs/rPRC_L_mask.nii", "ROIs/rPRC_R_mask.nii", #PRC
"ROIs/rPHC_ANT_L_mask.nii", "ROIs/rPHC_ANT_R_mask.nii" #PHC
))
require(papayaWidget)
papayaWidget(img = c("ROIs/single_subj_T1.nii",
"ROIs/rAMY_L_mask.nii", "ROIs/rAMY_R_mask.nii", #AMY
"ROIs/rHIPP_BODY_L_mask.nii", "ROIs/rHIPP_BODY_R_mask.nii", #HIPP
"ROIs/rPRC_L_mask.nii", "ROIs/rPRC_R_mask.nii", #PRC
"ROIs/rPHC_ANT_L_mask.nii", "ROIs/rPHC_ANT_R_mask.nii" #PHC
))
require(papayaWidget)
papayaWidget(img = c("./ROIs/single_subj_T1.nii",
"ROIs/rAMY_L_mask.nii", "ROIs/rAMY_R_mask.nii", #AMY
"ROIs/rHIPP_BODY_L_mask.nii", "ROIs/rHIPP_BODY_R_mask.nii", #HIPP
"ROIs/rPRC_L_mask.nii", "ROIs/rPRC_R_mask.nii", #PRC
"ROIs/rPHC_ANT_L_mask.nii", "ROIs/rPHC_ANT_R_mask.nii" #PHC
))
?papayaWidget()
require(papayaWidget)
papayaWidget(img = c("ROIs/single_subj_T1.nii",
"ROIs/rAMY_L_mask.nii", "ROIs/rAMY_R_mask.nii", #AMY
"ROIs/rHIPP_BODY_L_mask.nii", "ROIs/rHIPP_BODY_R_mask.nii", #HIPP
"ROIs/rPRC_L_mask.nii", "ROIs/rPRC_R_mask.nii", #PRC
"ROIs/rPHC_ANT_L_mask.nii", "ROIs/rPHC_ANT_R_mask.nii" #PHC
))
require(papayaWidget)
papayaWidget(img = c("single_subj_T1.nii",
"rAMY_L_mask.nii", "rAMY_R_mask.nii", #AMY
"rHIPP_BODY_L_mask.nii", "rHIPP_BODY_R_mask.nii", #HIPP
"rPRC_L_mask.nii", "rPRC_R_mask.nii", #PRC
"rPHC_ANT_L_mask.nii", "rPHC_ANT_R_mask.nii" #PHC
))
pwd
wd
getwd()
setwd('~/Desktop/mice-enc-presentation/')
require(papayaWidget)
papayaWidget(img = c("single_subj_T1.nii",
"rAMY_L_mask.nii", "rAMY_R_mask.nii", #AMY
"rHIPP_BODY_L_mask.nii", "rHIPP_BODY_R_mask.nii", #HIPP
"rPRC_L_mask.nii", "rPRC_R_mask.nii", #PRC
"rPHC_ANT_L_mask.nii", "rPHC_ANT_R_mask.nii" #PHC
))
?`papayaWidget-shiny`
require(papayaWidget)
papayaWidget(img = c("single_subj_T1.nii",
"rAMY_L_mask.nii", "rAMY_R_mask.nii", #AMY
"rHIPP_BODY_L_mask.nii", "rHIPP_BODY_R_mask.nii", #HIPP
"rPRC_L_mask.nii", "rPRC_R_mask.nii", #PRC
"rPHC_ANT_L_mask.nii", "rPHC_ANT_R_mask.nii" #PHC
))
require(papayaWidget)
papayaWidget(img = c("single_subj_T1.nii",
"rAMY_L_mask.nii", "rAMY_R_mask.nii", #AMY
"rHIPP_BODY_L_mask.nii", "rHIPP_BODY_R_mask.nii", #HIPP
"rPRC_L_mask.nii", "rPRC_R_mask.nii", #PRC
"rPHC_ANT_L_mask.nii", "rPHC_ANT_R_mask.nii" #PHC
))
?renderPapayaWidget
?htmlwidgets::shinyRenderWidget
?htmlwidgets
require(papayaWidget)
renderPapayaWidget(expr, env = parent.frame(), quoted = FALSE)
?papayaWidget
expr <- papayaWidget(img = c("single_subj_T1.nii",
"rAMY_L_mask.nii", "rAMY_R_mask.nii", #AMY
"rHIPP_BODY_L_mask.nii", "rHIPP_BODY_R_mask.nii", #HIPP
"rPRC_L_mask.nii", "rPRC_R_mask.nii", #PRC
"rPHC_ANT_L_mask.nii", "rPHC_ANT_R_mask.nii" #PHC
))
renderPapayaWidget(expr, env = parent.frame(), quoted = FALSE)
?papayaWidget
?htmlwidgets::createWidget()
vignette("develop_intro", package = "htmlwidgets").
vignette("develop_intro", package = "htmlwidgets")
